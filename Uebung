
import java.util.*;

public class Umrechnung {

	/*
	 * Method with return value (of data type int) and parameter transfer
	 * (data type: string) for converting Roman numerals into decimal numbers.
	 */
	public static int RomToDez(String rom) {

		int dez = 0;

		/*
		 * This line initializes a counter i with 0 and executes the loop as long as i is smaller than the length of the string rom. 
                 * In each loop pass, i is incremented by 1. This is used to iterate through the characters of a string rom 
                 * (i.e. each character in the string is considered or processed individually).
		 */
		for (int i = 0; rom.length() > i; i++) {

			char eingabe = rom.charAt(i); // Select single string characters
			char zeichen;

/*
This section of code checks whether there is at least one more character 
in the string rom after the current character at position i. If so, 
this next character is stored in the variable zeichen.
*/ 

			if (i + 1 != rom.length()) {

				zeichen = rom.charAt(i + 1);

/*
This section checks whether the current Roman character 'I' is not the last character in the input string.
If there is a character after the current one, the next character is checked.
If the current character is 'I' and the next character is 'V', 'X', 'L', 'C', 'D' or 'M',
the decimal value is reduced by 1 to take into account the special Roman numeral 'IV' or 'IX',
and the loop is continued with 'continue'.
*/

				if (eingabe == 'I' && (zeichen == 'V' || zeichen == 'X' || zeichen == 'L' || zeichen == 'C'
						|| zeichen == 'D' || zeichen == 'M')) {

					dez = dez - 1;
					continue;
					// Wenn das zutrifft, wird die aktuelle Durchlauf der Schleife übersprungen und
					// der nächsten durchgeführt.
				}

				if (eingabe == 'V'
						&& (zeichen == 'X' || zeichen == 'L' || zeichen == 'C' || zeichen == 'D' || zeichen == 'M')) {
					dez = dez - 5;
					continue;
				}

				if (eingabe == 'X' && (zeichen == 'L' || zeichen == 'C' || zeichen == 'D' || zeichen == 'M')) {
					dez = dez - 10;
					continue;
				}

				if (eingabe == 'L' && (zeichen == 'C' || zeichen == 'D' || zeichen == 'M')) {
					dez = dez - 50;
					continue;
				}

				if (eingabe == 'C' && (zeichen == 'D' || zeichen == 'M')) {
					dez = dez - 100;
					continue;
				}

				if (eingabe == 'D' && zeichen == 'M') {
					dez = dez - 500;
					continue;
				}
			}

/* 
The code analyzes Roman numeral symbols and calculates the corresponding decimal value.
*/



			switch (eingabe) {

			case 'I':
				dez = dez + 1;
				break;

			case 'V':
				dez = dez + 5;
				break;
			case 'X':
				dez = dez + 10;
				break;
			case 'L':
				dez = dez + 50;
				break;
			case 'C':
				dez = dez + 100;
				break;
			case 'D':
				dez = dez + 500;
				break;
			case 'M':
				dez = dez + 1000;
				break;

			}
		}

		return dez; // Since the method has a return value, 
                           //it must be terminated with its return value.

	}

	/*
	 * Method with return value (of data type string) and parameter transfer (data type: int) 
         * for converting decimal numbers in Roman numerals to .
	 */
	public static String DecInRom(int dez) {

		String newRom = "";

		while (dez > 0) {
/* 
checks whether the decimal number is greater than 
or equal to certain values (e.g., 1000, 900, 500, etc.), 
and then adds the corresponding Roman numerals to the newRom string.
The decimal number is reduced accordingly until it finally reaches the value 0.
*/ 

			if (dez >= 1000) {

				newRom = newRom + "M";
				dez = dez - 1000;

			}

			else if (dez >= 900) {
				newRom = newRom + "CM";
				dez = dez - 900;
			}

			else if (dez >= 500) {

				dez = dez - 500;
				newRom = newRom + "D";
			}

			else if (dez >= 400) {
				newRom = newRom + "CD";
				dez = dez - 400;
			}

			else if (dez >= 100) {
				dez = dez - 100;
				newRom = newRom + "C";
			}

			else if (dez >= 90) {
				newRom = newRom + "XC";
				dez = dez - 90;
			}

			else if (dez >= 50) {
				dez = dez - 50;
				newRom = newRom + "L";
			}

			else if (dez >= 40) {
				newRom = newRom + "XL";
				dez = dez - 40;
			}

			else if (dez >= 10) {
				dez = dez - 10;
				newRom = newRom + "X";
			}

			else if (dez >= 9) {
				newRom = newRom + "IX";
				dez = dez - 9;
			}

			else if (dez >= 5) {
				dez = dez - 5;
				newRom = newRom + "V";
			}

			else if (dez >= 4) {
				newRom = newRom + "IV";
				dez = dez - 4;
			}

			else if (dez >= 1) {
				dez = dez - 1;
				newRom = newRom + "I";
			}

		}

		return newRom;
	}

	public static void main(String[] args) {

		String[] romNumber = { "I", "V", "X", "L", "C", "D", "M" };
		int[] dezNumber = { 1, 5, 10, 50, 100, 500, 1000 };

		Scanner sc = new Scanner(System.in);

		while (true) {

			System.out.println(
					"Geben Sie 1 oder 2: (1 für Römischzahl -> Dezimalzahl und 2 für Dezimalzahl -> Römischzahl)");
			String eingabe = sc.nextLine();

			if (eingabe.equals("1")) {

				System.out.println("Geben Sie ein römischen Zahl ein: ");
				String rom = sc.nextLine();

				int dez = RomToDez(rom);
				System.out.println("Der Dezimalzahl lautet: " + dez);
			}

			else {
				System.out.println("Geben Sie den Dezimalzahl ein:");
				int dez = sc.nextInt();
				sc.nextLine();

				String newRom = DecInRom(dez);

				System.out.println("Der Römischen Zahl lautet: " + newRom);

			}

			System.out.println("Möchten Sie andere Umrechnung durchführen? \nGeben Sie J/N: ");
			eingabe = sc.nextLine();
			if (!eingabe.equals("J")) {
				break;
			}
		}

		System.out.println("Ende des Programms!");
	}
}
